# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
 tags:
   include:
     - prod

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  containerName: azuredevopstest
  imageName: memoyu/azuredevopstest
  appsettings: Azure.Devops.Test/appsettings.Production.json

stages:
- stage: Build
  displayName: Build Blog Api
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:

    - script: |
        echo ready to execute command
        ls
        sed -i 's/{MySqlConStr}/$(MySqlConStr)/g' $(appsettings)
        sed -i 's/{ConfigVal}/$(ConfigVal)/g' $(appsettings)
        echo "================= print file $(appsettings) start ===================="
        cat $(appsettings) | while read line; do echo $line ; done
        echo "================= print file $(appsettings) end ===================="
        echo command executed
        
    - task: Docker@2
      displayName: 'Build Docker Image And Push'
      inputs:
        containerRegistry: 'MemoyuDockerHub'
        repository: $(imageName)
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/docker/Dockerfile'
        buildContext: $(Build.Repository.LocalPath)
        tags: 'latest'

    - task: SSH@0
      displayName: 'Run Blog Api Container'
      inputs:
        sshEndpoint: 'HuaWeiCloud'
        runOptions: 'inline'
        inline: |
          echo "================= to del container ===================="

          #判断是否存在容器
          docker ps | grep $(containerName) &> /dev/null
          #如果不存在，则Remove
          if [ $? -ne 0 ]
          then
              echo "$(containerName) container not exist continue.. "
          else
              echo "remove $(containerName) container"
              docker kill $(containerName)
              docker rm $(containerName)
          fi

          echo "================= to rm image ===================="

          #判断是否存在镜像
          docker images | grep $(imageName) &> /dev/null
          #如果不存在，不做操作
          if [ $? -ne 0 ]
          then
              echo "image does not exist , continue..."
          else
              echo "image exists !!! remove it"
              docker rmi $(imageName)
          fi

          echo "================= to pull image ===================="
          docker pull $(imageName)
          echo "================= to run container ===================="
          docker run --name $(containerName) -d -p 9003:80 $(imageName)
          echo "================= publish success ===================="
        readyTimeout: '20000'